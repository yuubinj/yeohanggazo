let regionFestivalCurrentType = 'ongoing';

let regionFestivalCache = {
  ongoing: { page: 1, items: [], totalCount: 0 },
  upcoming: { page: 1, items: [], totalCount: 0 },
  finished: { page: 1, items: [], totalCount: 0 }
};

const REGION_ITEMS_PER_PAGE = 12;
const overlay = document.querySelector('.overlay');
const contextPath = document.body.dataset.contextPath || '';

function resetAndFetchRegionFestivalData() {
  regionFestivalCache = {
    ongoing: { page: 1, items: [], totalCount: 0 },
    upcoming: { page: 1, items: [], totalCount: 0 },
    finished: { page: 1, items: [], totalCount: 0 }
  };

  document.querySelectorAll('#festival-panel .festival-filter-buttons button').forEach(btn => {
    btn.classList.remove('active', 'btn-primary');
    btn.classList.add('btn-outline-primary');
  });

  const ongoingBtn = document.querySelector('#festival-panel #festival-filter-ongoing');
  if (ongoingBtn) {
    ongoingBtn.classList.add('active', 'btn-primary');
    ongoingBtn.classList.remove('btn-outline-primary');
  }

  regionFestivalCurrentType = 'ongoing';
  fetchRegionFestivalData(false);
}

async function fetchRegionFestivalData(append = false) {
  if (overlay) overlay.style.display = 'flex';

  const areaCode = selectedRegion.code;
  const currentPage = regionFestivalCache[regionFestivalCurrentType].page;

  let url = `${contextPath}/festival/list?pageNo=${currentPage}&numOfRows=${REGION_ITEMS_PER_PAGE}`;
  if (areaCode) {
    url += `&areaCode=${areaCode}`;
  }

  console.log(`[지역탭] 축제 API 요청 URL: ${url}`);

  try {
    const response = await fetch(url);
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

    const data = await response.json();
    const body = data.response?.body;

    const festivalItems = body?.items?.item || [];
    const totalCount = body?.totalCount || 0;

    const today = new Date(); today.setHours(0, 0, 0, 0);
    const newOngoing = [], newUpcoming = [], newFinished = [];

    festivalItems.forEach(item => {
      const startDate = parseRegionFestivalDate(item.eventstartdate);
      const endDate = parseRegionFestivalDate(item.eventenddate, true);

      if (today >= startDate && today <= endDate) {
        newOngoing.push(item);
      } else if (today < startDate) {
        newUpcoming.push(item);
      } else {
        newFinished.push(item);
      }
    });

    if (!append || currentPage === 1) {
      regionFestivalCache.ongoing.items = newOngoing;
      regionFestivalCache.upcoming.items = newUpcoming;
      regionFestivalCache.finished.items = newFinished;
    } else {
      regionFestivalCache.ongoing.items.push(...newOngoing);
      regionFestivalCache.upcoming.items.push(...newUpcoming);
      regionFestivalCache.finished.items.push(...newFinished);
    }

    regionFestivalCache.ongoing.totalCount = totalCount;
    regionFestivalCache.upcoming.totalCount = totalCount;
    regionFestivalCache.finished.totalCount = totalCount;

    renderRegionFestivalCards(regionFestivalCurrentType, append);

  } catch (error) {
    console.error('[지역탭] 축제 데이터 로드 오류:', error);
    document.querySelector('#festival-panel #festival-card-list').innerHTML =
      `<p class="text-danger">축제 데이터를 불러오는 데 실패했습니다.</p>`;
  } finally {
    if (overlay) overlay.style.display = 'none';
  }
}

function renderRegionFestivalCards(type, append = false) {
  const container = document.querySelector('#festival-panel #festival-card-list');
  const emptyGuide = document.querySelector('#festival-panel #festival-empty-guide');
  const moreBtn = document.querySelector('#festival-panel #festival-more-btn');

  if (!container) return;

  if (!append) {
    container.innerHTML = `<p class="text-center">축제 정보를 불러오는 중입니다...</p>`;
    if (emptyGuide) emptyGuide.style.display = 'none';
  }

  const festivals = regionFestivalCache[type].items;
  const currentPage = regionFestivalCache[type].page;
  const startIdx = (currentPage - 1) * REGION_ITEMS_PER_PAGE;
  const endIdx = startIdx + REGION_ITEMS_PER_PAGE;
  const batch = festivals.slice(startIdx, endIdx);

  if (festivals.length === 0) {
    container.innerHTML = `<p class="text-center">해당하는 ${getRegionFestivalTypeName(type)} 축제가 없습니다.</p>`;
    if (emptyGuide) emptyGuide.style.display = 'block';
    if (moreBtn) moreBtn.style.display = 'none';
    return;
  } else {
    if (emptyGuide) emptyGuide.style.display = 'none';
  }

  if (batch.length === 0) {
    if (moreBtn) moreBtn.style.display = 'none';
    return;
  }

  if (!append && container.innerHTML.includes('불러오는 중입니다')) {
    container.innerHTML = '';
  }

  batch.forEach((festival) => {
    const col = document.createElement('div');
    col.className = 'col-md-4 col-sm-6 col-12 mb-4';

    const card = document.createElement('div');
    card.className = 'card h-100 shadow-sm';

    const img = document.createElement('img');
    img.className = 'card-img-top';
    img.src = festival.firstimage || festival.firstimage2 || `${contextPath}/dist/images/noimage.png`;
    img.alt = festival.title;
    img.style.objectFit = 'cover';
    img.style.height = '180px';
    card.appendChild(img);

    const body = document.createElement('div');
    body.className = 'card-body d-flex flex-column';

    const title = document.createElement('h5');
    title.className = 'card-title text-truncate';
    title.textContent = festival.title;
    body.appendChild(title);

    const addr = document.createElement('p');
    addr.className = 'card-text small text-muted mb-1';
    addr.textContent = festival.addr1 || '주소 정보 없음';
    body.appendChild(addr);

    const date = document.createElement('p');
    date.className = 'card-text small text-primary fw-bold';
    date.textContent = `${formatRegionFestivalDate(festival.eventstartdate)} ~ ${formatRegionFestivalDate(festival.eventenddate)}`;
    body.appendChild(date);

    const moreBtn = document.createElement('button');
    moreBtn.className = 'btn btn-sm btn-outline-info mt-auto';
    moreBtn.textContent = '상세보기';
    moreBtn.addEventListener('click', () => showRegionFestivalDetail(festival));
    body.appendChild(moreBtn);

    card.appendChild(body);
    col.appendChild(card);
    container.appendChild(col);
  });

  const loadedCount = festivals.length;
  const totalCount = regionFestivalCache[type].totalCount || loadedCount;
  if (moreBtn) moreBtn.style.display = loadedCount < totalCount ? 'block' : 'none';
}

//  지역탭 축제 상세보기 (독립적으로 동작)
async function showRegionFestivalDetail(festival) {
  const modalEl = document.getElementById('festivalDetailModal');
  if (!modalEl) {
    console.error('[지역탭] festivalDetailModal 모달을 찾을 수 없습니다.');
    return;
  }

  const modal = new bootstrap.Modal(modalEl);

  // 제목 세팅
  document.getElementById('modal-festival-title').textContent = festival.title || '정보 없음';

  // 이미지 세팅
  const imgEl = document.createElement('img');
  imgEl.src = festival.firstimage || festival.firstimage2 || `${contextPath}/dist/images/noimage.png`;
  imgEl.className = 'img-fluid rounded';
  imgEl.style.maxWidth = '100%';
  imgEl.style.maxHeight = '300px';
  imgEl.style.objectFit = 'contain';
  const modalImg = document.getElementById('modal-festival-image');
  modalImg.innerHTML = '';
  modalImg.appendChild(imgEl);

  // 기간 / 주소 / 전화
  document.querySelector('#modal-festival-period span').textContent =
    `${formatRegionFestivalDate(festival.eventstartdate)} ~ ${formatRegionFestivalDate(festival.eventenddate)}`;
  document.querySelector('#modal-festival-addr span').textContent = festival.addr1 || '정보 없음';
  document.querySelector('#modal-festival-tel span').textContent = festival.tel || '정보 없음';

  // 홈페이지 영역 초기화
  const homepageSpan = document.querySelector('#modal-festival-homepage span');
  homepageSpan.innerHTML = '';
  if (festival.homepage) {
    const link = document.createElement('a');
    link.href = festival.homepage.replace(/<[^>]*>?/gm, '').trim();
    link.textContent = '홈페이지 바로가기';
    link.target = '_blank';
    homepageSpan.appendChild(link);
  } else {
    homepageSpan.textContent = '정보 없음';
  }

  // 상세 개요 API 호출 (contentId 필요)
  const overviewEl = document.getElementById('modal-festival-overview');
  overviewEl.innerHTML = '상세 정보를 불러오는 중...';

  if (festival.contentid) {
    const contentTypeId = festival.contenttypeid || 15;
    const detailUrl = `${contextPath}/festival/detail?contentId=${festival.contentid}&contentTypeId=${contentTypeId}`;
    try {
      const resp = await fetch(detailUrl);
      const detailData = await resp.json();
      const detailItem = detailData?.response?.body?.items?.item?.[0];
      const overview = detailItem?.overview || '';
      const homepageRaw = detailItem?.homepage || '';

      overviewEl.innerHTML = overview
        ? overview.replace(/<br\s*\/?>/gm, '\n').replace(/<[^>]*>?/gm, '').replace(/\n/g, '<br>')
        : '공공데이터에 상세정보가 등록되지 않았습니다.';

      homepageSpan.innerHTML = '';
      if (homepageRaw) {
        const link = document.createElement('a');
        link.href = homepageRaw.replace(/<[^>]*>?/gm, '').trim();
        link.textContent = '홈페이지 바로가기';
        link.target = '_blank';
        homepageSpan.appendChild(link);
      } else {
        homepageSpan.textContent = '정보 없음';
      }
    } catch (err) {
      console.error('[지역탭 상세 API] 로드 실패:', err);
      overviewEl.innerHTML = '공공데이터에 상세정보가 등록되지 않았습니다.';
    }
  } else {
    overviewEl.innerHTML = '공공데이터에 상세정보가 등록되지 않았습니다.';
  }

  //  최종적으로 모달 표시
  modal.show();
}

// 유틸
function parseRegionFestivalDate(str, endOfDay = false) {
  if (!str || str.length !== 8) return new Date(0);
  const d = new Date(
    parseInt(str.substring(0, 4)),
    parseInt(str.substring(4, 6)) - 1,
    parseInt(str.substring(6, 8))
  );
  if (endOfDay) d.setHours(23, 59, 59, 999);
  else d.setHours(0, 0, 0, 0);
  return d;
}

function formatRegionFestivalDate(str) {
  if (!str || str.length !== 8) return '';
  return `${str.substring(0, 4)}.${str.substring(4, 6)}.${str.substring(6, 8)}`;
}

function getRegionFestivalTypeName(type) {
  switch (type) {
    case 'ongoing': return '개최중';
    case 'upcoming': return '개최예정';
    case 'finished': return '종료된';
    default: return '';
  }
}

// 지역탭 축제 필터 버튼 이벤트
document.addEventListener('DOMContentLoaded', () => {
  // 탭 버튼 클릭 시 currentType 변경 및 렌더링
  document.querySelectorAll('#festival-panel .festival-filter-buttons button')?.forEach(button => {
    button.addEventListener('click', (e) => {
      document.querySelectorAll('#festival-panel .festival-filter-buttons button').forEach(btn => {
        btn.classList.remove('active', 'btn-primary');
        btn.classList.add('btn-outline-primary');
      });
      e.target.classList.add('active', 'btn-primary');
      e.target.classList.remove('btn-outline-primary');

      // 현재 선택된 탭 타입 반영
      regionFestivalCurrentType = e.target.dataset.type;
      console.log(`[지역탭] 탭 변경됨 → ${regionFestivalCurrentType}`);

      // 1페이지부터 다시 렌더링 (API 새로 호출하지 않고 캐시 데이터만 사용)
      regionFestivalCache[regionFestivalCurrentType].page = 1;
      renderRegionFestivalCards(regionFestivalCurrentType, false);
    });
  });

  // 더보기 버튼 이벤트
  const moreBtn = document.querySelector('#festival-panel #festival-more-btn');
  if (moreBtn) {
    moreBtn.addEventListener('click', () => {
      regionFestivalCache[regionFestivalCurrentType].page++;
      fetchRegionFestivalData(true);
    });
  }

  // 첫 로드 시 데이터 가져오기
  resetAndFetchRegionFestivalData();
});

